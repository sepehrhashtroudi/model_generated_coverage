var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":307,"id":82155,"methods":[{"el":55,"sc":1,"sl":50},{"el":71,"sc":1,"sl":58},{"el":80,"sc":1,"sl":74},{"el":92,"sc":1,"sl":83},{"el":101,"sc":1,"sl":95},{"el":110,"sc":1,"sl":104},{"el":119,"sc":1,"sl":113},{"el":126,"sc":1,"sl":122},{"el":131,"sc":1,"sl":129},{"el":147,"sc":1,"sl":134},{"el":155,"sc":1,"sl":150},{"el":164,"sc":1,"sl":158},{"el":175,"sc":1,"sl":167},{"el":182,"sc":1,"sl":178},{"el":193,"sc":1,"sl":185},{"el":200,"sc":1,"sl":196},{"el":246,"sc":3,"sl":242},{"el":280,"sc":3,"sl":278},{"el":284,"sc":3,"sl":282},{"el":294,"sc":3,"sl":286},{"el":306,"sc":3,"sl":296}],"name":"NodeTest","sl":48}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1094":{"methods":[{"sl":83},{"sl":278},{"sl":282}],"name":"testGetIndexOfChild1210","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":91},{"sl":279},{"sl":283}]},"test_1149":{"methods":[{"sl":134},{"sl":278},{"sl":282}],"name":"testCopyInformationFrom1833","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":144},{"sl":145},{"sl":146},{"sl":279},{"sl":283}]},"test_1264":{"methods":[{"sl":167},{"sl":278}],"name":"testSharedProps11966","pass":true,"statements":[{"sl":168},{"sl":169},{"sl":170},{"sl":171},{"sl":172},{"sl":173},{"sl":174},{"sl":279}]},"test_1402":{"methods":[{"sl":185}],"name":"testCheckTreeTypeAwareEqualsDifferent2279","pass":true,"statements":[{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190},{"sl":191},{"sl":192}]},"test_1591":{"methods":[{"sl":113}],"name":"testCheckTreeEqualsImplDifferentChild1437","pass":true,"statements":[{"sl":114},{"sl":115},{"sl":116},{"sl":117},{"sl":118}]},"test_1604":{"methods":[{"sl":74}],"name":"testInvalidSourceOffset1136","pass":true,"statements":[{"sl":75},{"sl":76},{"sl":77},{"sl":78},{"sl":79}]},"test_1999":{"methods":[{"sl":95}],"name":"testQualifiedName1257","pass":true,"statements":[{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_2102":{"methods":[{"sl":158}],"name":"testCheckTreeTypeAwareEqualsSameNull1859","pass":true,"statements":[{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_2255":{"methods":[{"sl":104}],"name":"testFileLevelJSDocAppender1313","pass":true,"statements":[{"sl":105},{"sl":106},{"sl":107},{"sl":108},{"sl":109}]},"test_242":{"methods":[{"sl":129}],"name":"testVarArgs11726","pass":true,"statements":[{"sl":130}]},"test_295":{"methods":[{"sl":150}],"name":"testCheckTreeEqualsSlashVDifferent1852","pass":true,"statements":[{"sl":151},{"sl":152},{"sl":153},{"sl":154}]},"test_536":{"methods":[{"sl":58},{"sl":278},{"sl":282}],"name":"testUseSourceInfoIfMissingFrom989","pass":true,"statements":[{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":70},{"sl":279},{"sl":283}]},"test_619":{"methods":[{"sl":122}],"name":"testCheckTreeEqualsImplDifferentChildCount1575","pass":true,"statements":[{"sl":123},{"sl":124},{"sl":125}]},"test_626":{"methods":[{"sl":50}],"name":"testCheckTreeEqualsImplDifferentIncProp529","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_761":{"methods":[{"sl":178}],"name":"testMergeOverflowGraciously2207","pass":true,"statements":[{"sl":179},{"sl":180},{"sl":181}]},"test_923":{"methods":[{"sl":196}],"name":"testCheckTreeEqualsStringDifferent2434","pass":true,"statements":[{"sl":197},{"sl":198},{"sl":199}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
