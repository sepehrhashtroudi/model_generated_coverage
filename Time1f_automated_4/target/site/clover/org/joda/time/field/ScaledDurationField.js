var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":154,"id":14422,"methods":[{"el":52,"sc":5,"sl":46},{"el":56,"sc":5,"sl":54},{"el":60,"sc":5,"sl":58},{"el":64,"sc":5,"sl":62},{"el":68,"sc":5,"sl":66},{"el":73,"sc":5,"sl":70},{"el":78,"sc":5,"sl":75},{"el":83,"sc":5,"sl":80},{"el":88,"sc":5,"sl":85},{"el":93,"sc":5,"sl":90},{"el":98,"sc":5,"sl":95},{"el":102,"sc":5,"sl":100},{"el":106,"sc":5,"sl":104},{"el":110,"sc":5,"sl":108},{"el":120,"sc":5,"sl":118},{"el":139,"sc":5,"sl":129},{"el":152,"sc":5,"sl":146}],"name":"ScaledDurationField","sl":32}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":46}],"name":"testSerialization517","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":51}]},"test_139":{"methods":[{"sl":108}],"name":"test_compareTo121","pass":true,"statements":[{"sl":109}]},"test_148":{"methods":[{"sl":70}],"name":"test_getMillis_int122","pass":false,"statements":[{"sl":71},{"sl":72}]},"test_162":{"methods":[{"sl":108},{"sl":146}],"name":"test_printParseOffset98","pass":true,"statements":[{"sl":109},{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_205":{"methods":[{"sl":108},{"sl":146}],"name":"testWithMinuteOfHourInDstChange_mockZone310","pass":true,"statements":[{"sl":109},{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_224":{"methods":[{"sl":108},{"sl":146}],"name":"testConstructor_ObjectStringEx6528","pass":true,"statements":[{"sl":109},{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_232":{"methods":[{"sl":108},{"sl":146}],"name":"testFactory_Zone_int345","pass":true,"statements":[{"sl":109},{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_241":{"methods":[{"sl":70},{"sl":75}],"name":"test_getMillis_int123","pass":true,"statements":[{"sl":71},{"sl":72},{"sl":76}]},"test_245":{"methods":[{"sl":46},{"sl":108},{"sl":146}],"name":"testToString346","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":51},{"sl":109},{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_260":{"methods":[{"sl":146}],"name":"test_hashCode125","pass":false,"statements":[{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_262":{"methods":[{"sl":108},{"sl":146}],"name":"testAddWeeks_int_dstOverlapSummer_addZero412","pass":true,"statements":[{"sl":109},{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_270":{"methods":[{"sl":108},{"sl":146}],"name":"test_parseWrongOffset87","pass":true,"statements":[{"sl":109},{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_308":{"methods":[{"sl":46},{"sl":108}],"name":"testSerializedGJChronologyChangedInternals51","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":51},{"sl":109}]},"test_356":{"methods":[{"sl":108},{"sl":146}],"name":"test_DateTime_roundFloor_hour_NewYork_Spring_postCutover309","pass":true,"statements":[{"sl":109},{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]},"test_389":{"methods":[{"sl":80},{"sl":85}],"name":"test_getMillis_int_long124","pass":true,"statements":[{"sl":81},{"sl":82},{"sl":86}]},"test_391":{"methods":[{"sl":108},{"sl":146}],"name":"testToString167","pass":true,"statements":[{"sl":109},{"sl":147},{"sl":148},{"sl":149},{"sl":150},{"sl":151}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
