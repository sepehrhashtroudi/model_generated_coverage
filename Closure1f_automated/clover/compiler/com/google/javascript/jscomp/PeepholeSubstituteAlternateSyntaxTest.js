var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":278,"id":73728,"methods":[{"el":39,"sc":3,"sl":37},{"el":43,"sc":3,"sl":41},{"el":51,"sc":3,"sl":45},{"el":61,"sc":3,"sl":53},{"el":66,"sc":3,"sl":63},{"el":70,"sc":3,"sl":68},{"el":74,"sc":3,"sl":72},{"el":78,"sc":3,"sl":76},{"el":93,"sc":3,"sl":82},{"el":117,"sc":1,"sl":96},{"el":138,"sc":1,"sl":118},{"el":151,"sc":1,"sl":139}],"name":"PeepholeSubstituteAlternateSyntaxTest","sl":24},{"el":277,"id":73815,"methods":[{"el":264,"sc":5,"sl":262},{"el":272,"sc":5,"sl":266}],"name":"PeepholeSubstituteAlternateSyntaxTest.StringCompareTestCase","sl":260}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_125":{"methods":[{"sl":53},{"sl":63},{"sl":68},{"sl":72},{"sl":118}],"name":"testFoldRegExpConstructor338","pass":true,"statements":[{"sl":55},{"sl":60},{"sl":65},{"sl":69},{"sl":73},{"sl":119},{"sl":120},{"sl":121},{"sl":122},{"sl":123},{"sl":124},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":132},{"sl":133},{"sl":134},{"sl":135},{"sl":136},{"sl":137}]},"test_128":{"methods":[{"sl":53},{"sl":63},{"sl":68},{"sl":72},{"sl":139}],"name":"testFoldReturns341","pass":true,"statements":[{"sl":55},{"sl":60},{"sl":65},{"sl":69},{"sl":73},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":144},{"sl":145},{"sl":146},{"sl":147},{"sl":148},{"sl":149},{"sl":150}]},"test_157":{"methods":[{"sl":53},{"sl":63},{"sl":68},{"sl":72},{"sl":96}],"name":"testFoldRegExpConstructor337","pass":true,"statements":[{"sl":55},{"sl":60},{"sl":65},{"sl":69},{"sl":73},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":108},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":114},{"sl":115},{"sl":116}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
