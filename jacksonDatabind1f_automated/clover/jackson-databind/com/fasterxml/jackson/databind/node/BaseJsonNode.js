var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":97,"id":1700,"methods":[{"el":22,"sc":5,"sl":22},{"el":38,"sc":5,"sl":30},{"el":49,"sc":5,"sl":46},{"el":54,"sc":5,"sl":51},{"el":74,"sc":5,"sl":70}],"name":"BaseJsonNode","sl":18}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_13":{"methods":[{"sl":22},{"sl":46}],"name":"testNested227","pass":true,"statements":[{"sl":48}]},"test_15":{"methods":[{"sl":22}],"name":"testInt53","pass":true,"statements":[]},"test_17":{"methods":[{"sl":22}],"name":"testArrayNodeEquality186","pass":true,"statements":[]},"test_22":{"methods":[{"sl":22}],"name":"testInt251","pass":true,"statements":[]},"test_30":{"methods":[{"sl":22},{"sl":46}],"name":"testTextAsBinary116","pass":true,"statements":[{"sl":48}]},"test_45":{"methods":[{"sl":22}],"name":"testDecimalNode52","pass":true,"statements":[]},"test_49":{"methods":[{"sl":22}],"name":"testParser235","pass":true,"statements":[]},"test_58":{"methods":[{"sl":22},{"sl":46}],"name":"testBinaryNode217","pass":true,"statements":[{"sl":48}]},"test_59":{"methods":[{"sl":22}],"name":"testMatchingSingle141","pass":true,"statements":[]},"test_64":{"methods":[{"sl":22}],"name":"testDouble45","pass":true,"statements":[]},"test_68":{"methods":[{"sl":22}],"name":"testBasics54","pass":true,"statements":[]},"test_69":{"methods":[{"sl":22}],"name":"testAsInt250","pass":true,"statements":[]},"test_77":{"methods":[{"sl":22}],"name":"testNullChecking267","pass":true,"statements":[]},"test_81":{"methods":[{"sl":22}],"name":"testObjectNodeEquality268","pass":true,"statements":[]},"test_84":{"methods":[{"sl":22}],"name":"testMatchingMultiple56","pass":true,"statements":[]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [49, 58, 30, 69, 17, 15, 64, 81, 13, 77, 84, 22, 59, 68, 45], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [58, 30, 13], [], [58, 30, 13], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
