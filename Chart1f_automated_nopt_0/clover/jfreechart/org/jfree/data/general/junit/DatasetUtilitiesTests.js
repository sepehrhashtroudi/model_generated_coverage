var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":745,"id":87203,"methods":[{"el":105,"sc":5,"sl":103},{"el":114,"sc":5,"sl":112},{"el":125,"sc":1,"sl":119},{"el":138,"sc":1,"sl":126},{"el":144,"sc":1,"sl":139},{"el":150,"sc":1,"sl":145},{"el":156,"sc":1,"sl":151},{"el":162,"sc":1,"sl":157},{"el":168,"sc":1,"sl":163},{"el":174,"sc":1,"sl":169},{"el":183,"sc":1,"sl":175},{"el":192,"sc":1,"sl":184},{"el":203,"sc":1,"sl":193},{"el":215,"sc":1,"sl":204},{"el":224,"sc":1,"sl":216},{"el":233,"sc":1,"sl":225},{"el":245,"sc":1,"sl":234},{"el":255,"sc":1,"sl":246},{"el":270,"sc":1,"sl":256},{"el":276,"sc":1,"sl":271},{"el":299,"sc":1,"sl":277},{"el":322,"sc":1,"sl":300},{"el":327,"sc":1,"sl":323},{"el":338,"sc":1,"sl":328},{"el":587,"sc":5,"sl":578},{"el":601,"sc":5,"sl":594},{"el":623,"sc":5,"sl":609},{"el":644,"sc":5,"sl":630}],"name":"DatasetUtilitiesTests","sl":94}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1040":{"methods":[{"sl":163},{"sl":578}],"name":"testIterateRangeBounds_CategoryDataset854","pass":true,"statements":[{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":579},{"sl":580},{"sl":581},{"sl":582},{"sl":583},{"sl":584},{"sl":585},{"sl":586}]},"test_1109":{"methods":[{"sl":328}],"name":"test11708251396","pass":true,"statements":[{"sl":329},{"sl":330},{"sl":331},{"sl":332},{"sl":333}]},"test_1158":{"methods":[{"sl":175}],"name":"testFindMinimumStackedRangeValue860","pass":true,"statements":[{"sl":176},{"sl":177},{"sl":178},{"sl":179},{"sl":180},{"sl":181},{"sl":182}]},"test_1165":{"methods":[{"sl":175}],"name":"testFindMinimumStackedRangeValue860","pass":true,"statements":[{"sl":176},{"sl":177},{"sl":178},{"sl":179},{"sl":180},{"sl":181},{"sl":182}]},"test_1173":{"methods":[{"sl":139},{"sl":578}],"name":"testFindRangeBounds850","pass":false,"statements":[{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":579},{"sl":580},{"sl":581},{"sl":582},{"sl":583},{"sl":584},{"sl":585},{"sl":586}]},"test_123":{"methods":[{"sl":234}],"name":"testFindMaximumStackedRangeValue_CategoryDataset867","pass":false,"statements":[{"sl":235},{"sl":236},{"sl":237},{"sl":238},{"sl":239},{"sl":240},{"sl":241},{"sl":242},{"sl":243},{"sl":244}]},"test_141":{"methods":[{"sl":225}],"name":"testMinMaxStackedRange866","pass":true,"statements":[{"sl":226},{"sl":227},{"sl":228},{"sl":229},{"sl":230},{"sl":231},{"sl":232}]},"test_191":{"methods":[{"sl":184}],"name":"testFindMinimumStackedRangeValueForCategoryDataset1861","pass":true,"statements":[{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190},{"sl":191}]},"test_197":{"methods":[{"sl":277}],"name":"testGetDomainBounds1264","pass":false,"statements":[{"sl":278},{"sl":279},{"sl":280},{"sl":281},{"sl":282},{"sl":283},{"sl":284},{"sl":285},{"sl":286},{"sl":287},{"sl":288},{"sl":289},{"sl":290},{"sl":291},{"sl":292},{"sl":293},{"sl":294},{"sl":295},{"sl":296}]},"test_263":{"methods":[{"sl":277}],"name":"testGetDomainBounds1264","pass":false,"statements":[{"sl":278},{"sl":279},{"sl":280},{"sl":281},{"sl":282},{"sl":283},{"sl":284},{"sl":285},{"sl":286},{"sl":287},{"sl":288},{"sl":289},{"sl":290},{"sl":291},{"sl":292},{"sl":293},{"sl":294},{"sl":295},{"sl":296}]},"test_270":{"methods":[{"sl":246}],"name":"testGetValue21147","pass":false,"statements":[{"sl":247},{"sl":248},{"sl":249},{"sl":250},{"sl":252},{"sl":254}]},"test_293":{"methods":[{"sl":157},{"sl":609}],"name":"testFindRangeBounds853","pass":false,"statements":[{"sl":158},{"sl":159},{"sl":160},{"sl":610},{"sl":611},{"sl":612},{"sl":613},{"sl":614},{"sl":615},{"sl":616},{"sl":617},{"sl":618},{"sl":619},{"sl":620},{"sl":621},{"sl":622}]},"test_297":{"methods":[{"sl":169},{"sl":630}],"name":"testFindStackedRangeBoundsForTableXYDataset1858","pass":true,"statements":[{"sl":170},{"sl":171},{"sl":172},{"sl":173},{"sl":631},{"sl":633},{"sl":634},{"sl":635},{"sl":636},{"sl":638},{"sl":639},{"sl":640},{"sl":641},{"sl":643}]},"test_311":{"methods":[{"sl":193}],"name":"testFindMinimumStackedRangeValue_CategoryDataset862","pass":false,"statements":[{"sl":194},{"sl":195},{"sl":196},{"sl":197},{"sl":198},{"sl":199},{"sl":200},{"sl":201},{"sl":202}]},"test_357":{"methods":[{"sl":163},{"sl":578}],"name":"testIterateRangeBounds_CategoryDataset854","pass":true,"statements":[{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":579},{"sl":580},{"sl":581},{"sl":582},{"sl":583},{"sl":584},{"sl":585},{"sl":586}]},"test_393":{"methods":[{"sl":193}],"name":"testFindMinimumStackedRangeValue_CategoryDataset862","pass":false,"statements":[{"sl":194},{"sl":195},{"sl":196},{"sl":197},{"sl":198},{"sl":199},{"sl":200},{"sl":201},{"sl":202}]},"test_414":{"methods":[{"sl":216}],"name":"testMinMaxRange864","pass":true,"statements":[{"sl":217},{"sl":218},{"sl":219},{"sl":220},{"sl":221},{"sl":222},{"sl":223}]},"test_439":{"methods":[{"sl":246}],"name":"testGetValue21147","pass":false,"statements":[{"sl":247},{"sl":248},{"sl":249},{"sl":250},{"sl":252},{"sl":254}]},"test_441":{"methods":[{"sl":300}],"name":"testGetDomainBounds1265","pass":true,"statements":[{"sl":301},{"sl":302},{"sl":303},{"sl":304},{"sl":305},{"sl":306},{"sl":307},{"sl":308},{"sl":309},{"sl":310},{"sl":311},{"sl":312},{"sl":313},{"sl":314},{"sl":315},{"sl":316},{"sl":317},{"sl":318},{"sl":319},{"sl":320},{"sl":321}]},"test_443":{"methods":[{"sl":216}],"name":"testMinMaxRange864","pass":true,"statements":[{"sl":217},{"sl":218},{"sl":219},{"sl":220},{"sl":221},{"sl":222},{"sl":223}]},"test_456":{"methods":[{"sl":256}],"name":"testGetStartX1261","pass":false,"statements":[{"sl":257},{"sl":258},{"sl":259},{"sl":260}]},"test_470":{"methods":[{"sl":145},{"sl":578}],"name":"testFindRangeBounds_CategoryDataset851","pass":false,"statements":[{"sl":146},{"sl":147},{"sl":148},{"sl":149},{"sl":579},{"sl":580},{"sl":581},{"sl":582},{"sl":583},{"sl":584},{"sl":585},{"sl":586}]},"test_48":{"methods":[{"sl":323}],"name":"testFindStackedRangeBoundsForTableXYDataset21381","pass":true,"statements":[{"sl":324},{"sl":325},{"sl":326}]},"test_510":{"methods":[{"sl":271},{"sl":609}],"name":"testIterateRangeBounds1262","pass":true,"statements":[{"sl":272},{"sl":273},{"sl":274},{"sl":275},{"sl":610},{"sl":611},{"sl":612},{"sl":613},{"sl":614},{"sl":615},{"sl":616},{"sl":617},{"sl":618},{"sl":619},{"sl":620},{"sl":621},{"sl":622}]},"test_570":{"methods":[{"sl":323}],"name":"testFindStackedRangeBoundsForTableXYDataset21381","pass":true,"statements":[{"sl":324},{"sl":325},{"sl":326}]},"test_580":{"methods":[{"sl":225}],"name":"testMinMaxStackedRange866","pass":true,"statements":[{"sl":226},{"sl":227},{"sl":228},{"sl":229},{"sl":230},{"sl":231},{"sl":232}]},"test_61":{"methods":[{"sl":204}],"name":"testFindMinimumStackedRangeValue863","pass":false,"statements":[{"sl":205},{"sl":206},{"sl":207},{"sl":208},{"sl":209},{"sl":210},{"sl":211}]},"test_626":{"methods":[{"sl":119}],"name":"testConstructor496","pass":true,"statements":[{"sl":120},{"sl":121},{"sl":122},{"sl":123},{"sl":124}]},"test_668":{"methods":[{"sl":256}],"name":"testGetStartX1261","pass":false,"statements":[{"sl":257},{"sl":258},{"sl":259},{"sl":260}]},"test_688":{"methods":[{"sl":234}],"name":"testFindMaximumStackedRangeValue_CategoryDataset867","pass":false,"statements":[{"sl":235},{"sl":236},{"sl":237},{"sl":238},{"sl":239},{"sl":240},{"sl":241},{"sl":242},{"sl":243},{"sl":244}]},"test_693":{"methods":[{"sl":169},{"sl":630}],"name":"testFindStackedRangeBoundsForTableXYDataset1858","pass":true,"statements":[{"sl":170},{"sl":171},{"sl":172},{"sl":173},{"sl":631},{"sl":633},{"sl":634},{"sl":635},{"sl":636},{"sl":638},{"sl":639},{"sl":640},{"sl":641},{"sl":643}]},"test_694":{"methods":[{"sl":151},{"sl":578}],"name":"testFindRangeBounds_CategoryDataset852","pass":false,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":579},{"sl":580},{"sl":581},{"sl":582},{"sl":583},{"sl":584},{"sl":585},{"sl":586}]},"test_699":{"methods":[{"sl":145},{"sl":578}],"name":"testFindRangeBounds_CategoryDataset851","pass":false,"statements":[{"sl":146},{"sl":147},{"sl":148},{"sl":149},{"sl":579},{"sl":580},{"sl":581},{"sl":582},{"sl":583},{"sl":584},{"sl":585},{"sl":586}]},"test_737":{"methods":[{"sl":139},{"sl":578}],"name":"testFindRangeBounds850","pass":false,"statements":[{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":579},{"sl":580},{"sl":581},{"sl":582},{"sl":583},{"sl":584},{"sl":585},{"sl":586}]},"test_743":{"methods":[{"sl":271},{"sl":609}],"name":"testIterateRangeBounds1262","pass":true,"statements":[{"sl":272},{"sl":273},{"sl":274},{"sl":275},{"sl":610},{"sl":611},{"sl":612},{"sl":613},{"sl":614},{"sl":615},{"sl":616},{"sl":617},{"sl":618},{"sl":619},{"sl":620},{"sl":621},{"sl":622}]},"test_75":{"methods":[{"sl":126}],"name":"testFindDomainBounds_NaN847","pass":false,"statements":[{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":132},{"sl":133},{"sl":134}]},"test_76":{"methods":[{"sl":119}],"name":"testConstructor496","pass":true,"statements":[{"sl":120},{"sl":121},{"sl":122},{"sl":123},{"sl":124}]},"test_845":{"methods":[{"sl":126}],"name":"testFindDomainBounds_NaN847","pass":false,"statements":[{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":132},{"sl":133},{"sl":134}]},"test_855":{"methods":[{"sl":328}],"name":"test11708251396","pass":true,"statements":[{"sl":329},{"sl":330},{"sl":331},{"sl":332},{"sl":333}]},"test_860":{"methods":[{"sl":151},{"sl":578}],"name":"testFindRangeBounds_CategoryDataset852","pass":false,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":579},{"sl":580},{"sl":581},{"sl":582},{"sl":583},{"sl":584},{"sl":585},{"sl":586}]},"test_91":{"methods":[{"sl":204}],"name":"testFindMinimumStackedRangeValue863","pass":false,"statements":[{"sl":205},{"sl":206},{"sl":207},{"sl":208},{"sl":209},{"sl":210},{"sl":211}]},"test_936":{"methods":[{"sl":184}],"name":"testFindMinimumStackedRangeValueForCategoryDataset1861","pass":true,"statements":[{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190},{"sl":191}]},"test_955":{"methods":[{"sl":157},{"sl":609}],"name":"testFindRangeBounds853","pass":false,"statements":[{"sl":158},{"sl":159},{"sl":160},{"sl":610},{"sl":611},{"sl":612},{"sl":613},{"sl":614},{"sl":615},{"sl":616},{"sl":617},{"sl":618},{"sl":619},{"sl":620},{"sl":621},{"sl":622}]},"test_99":{"methods":[{"sl":300}],"name":"testGetDomainBounds1265","pass":true,"statements":[{"sl":301},{"sl":302},{"sl":303},{"sl":304},{"sl":305},{"sl":306},{"sl":307},{"sl":308},{"sl":309},{"sl":310},{"sl":311},{"sl":312},{"sl":313},{"sl":314},{"sl":315},{"sl":316},{"sl":317},{"sl":318},{"sl":319},{"sl":320},{"sl":321}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
