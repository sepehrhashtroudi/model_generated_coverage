var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":285,"id":861,"methods":[{"el":82,"sc":5,"sl":80},{"el":99,"sc":5,"sl":94},{"el":125,"sc":5,"sl":111},{"el":137,"sc":5,"sl":135},{"el":152,"sc":5,"sl":147},{"el":184,"sc":5,"sl":166},{"el":211,"sc":5,"sl":193},{"el":242,"sc":5,"sl":222},{"el":272,"sc":5,"sl":252},{"el":284,"sc":5,"sl":282}],"name":"BinaryCodec","sl":35}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_130":{"methods":[{"sl":222}],"name":"testToAsciiBytes51","pass":true,"statements":[{"sl":223},{"sl":224},{"sl":227},{"sl":232},{"sl":233},{"sl":234},{"sl":235},{"sl":237},{"sl":241}]},"test_16":{"methods":[{"sl":252}],"name":"testToAsciiChars52","pass":true,"statements":[{"sl":253},{"sl":254},{"sl":257},{"sl":262},{"sl":263},{"sl":264},{"sl":265},{"sl":267},{"sl":271}]},"test_24":{"methods":[{"sl":252},{"sl":282}],"name":"testToAsciiString74","pass":true,"statements":[{"sl":253},{"sl":257},{"sl":262},{"sl":263},{"sl":264},{"sl":265},{"sl":267},{"sl":271},{"sl":283}]},"test_26":{"methods":[{"sl":94},{"sl":252}],"name":"testEncodeObject102","pass":true,"statements":[{"sl":95},{"sl":98},{"sl":253},{"sl":257},{"sl":262},{"sl":263},{"sl":264},{"sl":265},{"sl":267},{"sl":271}]},"test_39":{"methods":[{"sl":80},{"sl":222}],"name":"testEncodebyteArray98","pass":true,"statements":[{"sl":81},{"sl":223},{"sl":224},{"sl":227},{"sl":232},{"sl":233},{"sl":234},{"sl":235},{"sl":237},{"sl":241}]},"test_52":{"methods":[{"sl":94}],"name":"testEncodeObjectException66","pass":true,"statements":[{"sl":95},{"sl":96}]},"test_53":{"methods":[{"sl":147},{"sl":166}],"name":"testToByteArrayFromString42","pass":true,"statements":[{"sl":148},{"sl":149},{"sl":151},{"sl":167},{"sl":171},{"sl":176},{"sl":177},{"sl":178},{"sl":179},{"sl":183}]},"test_70":{"methods":[{"sl":193}],"name":"testFromAsciibyteArray73","pass":true,"statements":[{"sl":194},{"sl":195},{"sl":198},{"sl":203},{"sl":204},{"sl":205},{"sl":206},{"sl":210}]},"test_73":{"methods":[{"sl":111},{"sl":135},{"sl":166},{"sl":193}],"name":"testDecodeObject95","pass":true,"statements":[{"sl":112},{"sl":113},{"sl":115},{"sl":116},{"sl":118},{"sl":119},{"sl":121},{"sl":122},{"sl":136},{"sl":167},{"sl":171},{"sl":176},{"sl":177},{"sl":178},{"sl":179},{"sl":183},{"sl":194},{"sl":195},{"sl":198},{"sl":203},{"sl":204},{"sl":205},{"sl":206},{"sl":210}]},"test_86":{"methods":[{"sl":135},{"sl":193}],"name":"testDecodebyteArray103","pass":true,"statements":[{"sl":136},{"sl":194},{"sl":198},{"sl":203},{"sl":204},{"sl":205},{"sl":206},{"sl":210}]},"test_99":{"methods":[{"sl":166}],"name":"testFromAsciicharArray34","pass":true,"statements":[{"sl":167},{"sl":168},{"sl":171},{"sl":176},{"sl":177},{"sl":178},{"sl":179},{"sl":183}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [39], [39], [], [], [], [], [], [], [], [], [], [], [], [], [52, 26], [52, 26], [52], [], [26], [], [], [], [], [], [], [], [], [], [], [], [], [73], [73], [73], [], [73], [73], [], [73], [73], [], [73], [73], [], [], [], [], [], [], [], [], [], [], [], [], [73, 86], [73, 86], [], [], [], [], [], [], [], [], [], [], [53], [53], [53], [], [53], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [73, 53, 99], [73, 53, 99], [99], [], [], [73, 53, 99], [], [], [], [], [73, 53, 99], [73, 53, 99], [73, 53, 99], [73, 53, 99], [], [], [], [73, 53, 99], [], [], [], [], [], [], [], [], [], [73, 86, 70], [73, 86, 70], [73, 70], [], [], [73, 86, 70], [], [], [], [], [73, 86, 70], [73, 86, 70], [73, 86, 70], [73, 86, 70], [], [], [], [73, 86, 70], [], [], [], [], [], [], [], [], [], [], [], [130, 39], [130, 39], [130, 39], [], [], [130, 39], [], [], [], [], [130, 39], [130, 39], [130, 39], [130, 39], [], [130, 39], [], [], [], [130, 39], [], [], [], [], [], [], [], [], [], [], [24, 16, 26], [24, 16, 26], [16], [], [], [24, 16, 26], [], [], [], [], [24, 16, 26], [24, 16, 26], [24, 16, 26], [24, 16, 26], [], [24, 16, 26], [], [], [], [24, 16, 26], [], [], [], [], [], [], [], [], [], [], [24], [24], [], []]
